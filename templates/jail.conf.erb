<%
  class String
    def to_bool
        return true  if self == true  || self =~ (/(true|t|yes|y|1)$/i)
        return false if self == false || self.blank? || self =~ (/(false|f|no|n|0)$/i)
        raise ArgumentError.new("invalid value for Boolean: \"#{self}\"")
    end
  end
-%>
# File managed by Puppet
# Do not edit manualy as your changes will be overwritten
# and might cause this jail to restart!

<% {
'jid'			=> 'string',
'jname'			=> 'string',
'path'			=> 'string',
'ip4'			=> 'string',
'astart'		=> 'string',
'ver'			=> 'string',
'arch'			=> 'string',
'ip4_addr'		=> 'string',
'ip4.saddrsel'          => 'string',
'ip6'                   => 'string',
'ip6.addr'              => 'string',
'ip6.saddrsel'          => 'string',
'interface'             => 'string',
'vnet'                  => 'string',
'vnet.interface'        => 'string',
'host.hostname'         => 'string',
'host.domainname'       => 'string',
'host.hostuuid'         => 'string',
'host.hostid'           => 'string',
'ip.hostname'           => 'string',
'host'                  => 'string',
'securelevel'           => 'string',
'devfs_ruleset'         => 'string',
'children.max'          => 'string',
'children.cur'          => 'string',
'enforce_statfs'        => 'string',
'persist'               => 'string',
'allow.set_hostname'    => 'string',
'allow.sysvipc'         => 'string',
'allow.raw_sockets'     => 'string',
'allow.chflags'         => 'string',
'allow.mount'           => 'string',
'allow.mount.devfs'     => 'string',
'allow.mount.nullfs'    => 'string',
'allow.mount.procfs'    => 'string',
'allow.mount.tmpfs'     => 'string',
'allow.mount.zfs'       => 'string',
'allow.quotas'          => 'string',
'allow.socket_af'       => 'string',
'allow.dying'           => 'string',
'exec.prestart'         => 'string',
'exec.start'            => 'string',
'exec.poststart'        => 'string',
'exec.prestop'          => 'string',
'exec.stop'             => 'string',
'exec.poststop'         => 'string',
'exec.clean'            => 'string',
'exec.jail_user'        => 'string',
'exec.system_jail_user' => 'string',
'exec.system_user'      => 'string',
'exec.timeout'          => 'string',
'exec.consolelog'       => 'string',
'exec.fib'              => 'string',
'stop.timeout'          => 'string',
'mount'                 => 'string',
'mount.fstab'           => 'string',
'mount.devfs'           => 'string',
'mount.fdescfs'         => 'string',
'depend'                => 'string',
}.each {|var, type|
      cleanVar = var.gsub(/\./, '_' )
      value = scope.lookupvar("#{cleanVar}")
      if value != ''
        case type
          when 'string' -%>
    <%= var %> = '<%= scope.lookupvar("#{cleanVar}") %>';
<%-       when 'boolean'
            if !!value != value
              value = value.to_bool
            end -%>
    <%= var %> = <%= value %>;
<%-       end
      end
    } -%>
